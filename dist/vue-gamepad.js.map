{"version":3,"file":"vue-gamepad.js","sources":["../lib/utils.js","../lib/button-mapping.js","../lib/gamepad.js","../lib/index.js"],"sourcesContent":["/**\r\n * helper function to build all nested properties similar to lodash's _.set function\r\n *\r\n * set(object, ['x', 'y', 'z'], 'default')\r\n * console.log(object.x.y.z);\r\n *  => default\r\n *\r\n * @param {object} obj object to build properties for\r\n * @param {array} keys list of keys to nest\r\n * @param {any} value value to set\r\n */\r\nexport function set(obj, keys, value) {\r\n  /* eslint-disable no-param-reassign */\r\n  obj[keys[0]] = obj[keys[0]] || {};\r\n  const tmp = obj[keys[0]];\r\n\r\n  if (keys.length > 1) {\r\n    keys.shift();\r\n    set(tmp, keys, value);\r\n  } else {\r\n    obj[keys[0]] = value;\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\n/**\r\n * helper function to get value from a nest object similar to lodash's _.get function\r\n *\r\n * get({ x: { y: 0 } }, ['x', 'y', 'z'], [])\r\n * => []\r\n *\r\n * @param {object} obj object to get properties from\r\n * @param {array} keys list of keys to use\r\n * @param {any} [def=undefined] default value if nothing was found\r\n */\r\nexport function get(obj, keys, def = undefined) {\r\n  const tmp = obj[keys[0]];\r\n\r\n  if (keys.length > 1 && tmp) {\r\n    keys.shift();\r\n    return get(tmp, keys) || def;\r\n  }\r\n\r\n  return tmp || def;\r\n}\r\n","export const ButtonNames = [\r\n  'button-a', 'button-b', 'button-x', 'button-y',\r\n  'shoulder-left', 'shoulder-right', 'trigger-left', 'trigger-right',\r\n  'button-select', 'button-start',\r\n  'left-stick-in', 'right-stick-in',\r\n  'button-dpad-up', 'button-dpad-down', 'button-dpad-left', 'button-dpad-right',\r\n  'vendor',\r\n];\r\n\r\nexport const PositiveAxisNames = [\r\n  'left-analog-right', 'left-analog-down',\r\n  'right-analog-right', 'right-analog-down',\r\n];\r\n\r\nexport const NegativeAxisNames = [\r\n  'left-analog-left', 'left-analog-up',\r\n  'right-analog-left', 'right-analog-up',\r\n];\r\n\r\n/**\r\n * get name of axis from input value\r\n * @param {number} axis axis id\r\n * @param {number} value current input value\r\n * @return {string} string representing the axis name\r\n */\r\nexport function getAxisNameFromValue(axis, value) {\r\n  if (value > 0) return PositiveAxisNames[axis];\r\n  return NegativeAxisNames[axis];\r\n}\r\n\r\n/**\r\n * get the name of both position and negative names from an axis\r\n * @param {number} axis axis is\r\n * @return {array} array containing both position and negative axis names\r\n */\r\nexport function getAxisNames(axis) {\r\n  return [PositiveAxisNames[axis], NegativeAxisNames[axis]];\r\n}\r\n","import { set, get } from './utils';\r\nimport { getAxisNameFromValue, getAxisNames } from './button-mapping';\r\n\r\nexport default function (Vue, options = {}) {\r\n  return class Gamepad {\r\n    constructor() {\r\n      this.holding = {};\r\n      this.events = {};\r\n      this.layer = 0;\r\n      this.layers = {};\r\n\r\n      window.addEventListener('gamepadconnected', this.padConnected.bind(this));\r\n      window.addEventListener('gamepaddisconnected', this.padDisconnected.bind(this));\r\n\r\n      this.animationFrame = requestAnimationFrame(this.run.bind(this));\r\n    }\r\n\r\n    /**\r\n     * gamepad was connected\r\n     */\r\n    padConnected() {\r\n      document.body.classList.add('gamepad-connected');\r\n    }\r\n\r\n    /**\r\n     * gamepad was disconnected\r\n     */\r\n    padDisconnected() {\r\n      if (this.getGamepads().length === 0) {\r\n        document.body.classList.remove('gamepad-connected');\r\n      }\r\n    }\r\n\r\n    /**\r\n     * add an event handler\r\n     * @param {string} event name of the button event\r\n     * @param {object} modifiers vue binding modifiers\r\n     * @param {function} callback function to trigger\r\n     * @param {object} vnode vue directive vnode\r\n     */\r\n    addListener(event, modifiers, callback, vnode = null) {\r\n      const action = modifiers.released ? 'released' : 'pressed';\r\n      const repeat = !!modifiers.repeat;\r\n\r\n      // if we don't already have an array initialised for the current event\r\n      // do it now\r\n      const events = get(this.events, [this.layer, action, event], []);\r\n      if (events.length === 0) {\r\n        set(this.events, [this.layer, action, event], []);\r\n      }\r\n\r\n      // register the event\r\n      this.events[this.layer][action][event].push({ vnode, repeat, callback });\r\n\r\n      // inject classes\r\n      if (options.injectClasses && vnode && vnode.elm) {\r\n        vnode.elm.classList.add('v-gamepad', `v-gamepad--${event}`);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * remove an event handler\r\n     * @param {string} event name of the button event\r\n     * @param {object} modifiers vue binding modifiers\r\n     * @param {function} callback trigger function\r\n     */\r\n    removeListener(event, modifiers, callback) {\r\n      const action = modifiers.released ? 'released' : 'pressed';\r\n\r\n      // get a list of all events for the current action\r\n      let events = get(this.events, [this.layer, action, event], []);\r\n      if (events.length > 0) {\r\n        // filter any events which have same callback\r\n        events = events.filter((e) => e.callback !== callback);\r\n\r\n        // if we have any remaining events after the filter, update the array\r\n        // otherwise delete the object\r\n        if (events.length > 0) {\r\n          set(this.events, [this.layer, action, event], events);\r\n        } else {\r\n          delete this.events[this.layer][action][event];\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * switch to a new layer\r\n     * @param {number} layer layer number to switch to\r\n     */\r\n    switchToLayer(layer) {\r\n      if (this.layer !== layer) {\r\n        // keep track of the old layer before we switch\r\n        this.layers[layer] = this.layer;\r\n        this.layer = layer;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * remove a layer, delete the registered events and switch back to the old layer\r\n     * @param {number} layer layer number to remove\r\n     */\r\n    removeLayer(layer) {\r\n      // switch back to the previous layer\r\n      this.layer = this.layers[layer];\r\n      delete this.layers[layer];\r\n\r\n      // delete the layer events\r\n      delete this.events[layer];\r\n    }\r\n\r\n    /**\r\n     * main loop\r\n     */\r\n    run() {\r\n      this.getGamepads().forEach((pad) => {\r\n        // check gamepad buttons\r\n        pad.buttons.forEach((button, index) => {\r\n          const name = options.buttonNames[index];\r\n\r\n          // button is pressed\r\n          if (button.pressed) {\r\n            const events = get(this.events, [this.layer, 'pressed', name], []);\r\n\r\n            if (events.length > 0) {\r\n              const event = events[events.length - 1];\r\n              const now = Date.now();\r\n              const initial = typeof this.holding[name] === 'undefined';\r\n\r\n              // button was just pressed, or is repeating\r\n              if (initial\r\n                  || (event.repeat\r\n                      && (now - this.holding[name]) >= options.buttonRepeatTimeout)) {\r\n                this.holding[name] = now;\r\n                if (initial) {\r\n                  this.holding[name] += (options.buttonInitialTimeout\r\n                                         - options.buttonRepeatTimeout);\r\n                }\r\n                event.callback.call();\r\n              }\r\n            }\r\n          // button was released\r\n          } else if (!button.pressed && typeof this.holding[name] !== 'undefined') {\r\n            delete this.holding[name];\r\n\r\n            const events = get(this.events, [this.layer, 'released', name], []);\r\n            if (events.length > 0) {\r\n              const event = events[events.length - 1];\r\n              event.callback.call();\r\n            }\r\n          }\r\n        });\r\n\r\n        // check gamepad axis\r\n        pad.axes.forEach((value, index) => {\r\n          if (value >= options.analogThreshold || value <= -(options.analogThreshold)) {\r\n            const name = getAxisNameFromValue(index, value);\r\n            const events = get(this.events, [this.layer, 'pressed', name], []);\r\n\r\n            if (events.length > 0) {\r\n              const event = events[events.length - 1];\r\n              const now = Date.now();\r\n              const initial = typeof this.holding[name] === 'undefined';\r\n\r\n              // axis was just moved, or is repeating\r\n              if (initial\r\n                  || (event.repeat\r\n                      && (now - this.holding[name]) >= options.buttonRepeatTimeout)) {\r\n                this.holding[name] = now;\r\n                if (initial) {\r\n                  this.holding[name] += (options.buttonInitialTimeout\r\n                                         - options.buttonRepeatTimeout);\r\n                }\r\n                event.callback.call();\r\n              }\r\n            }\r\n          } else {\r\n            const names = getAxisNames(index);\r\n\r\n            // trigger the release event if this axis was previously pressed\r\n            names.filter((name) => this.holding[name])\r\n              .forEach((name) => {\r\n                delete this.holding[name];\r\n\r\n                const events = get(this.events, [this.layer, 'released', name], []);\r\n                if (events.length > 0) {\r\n                  const event = events[events.length - 1];\r\n                  event.callback.call();\r\n                }\r\n              });\r\n          }\r\n        });\r\n      });\r\n\r\n      this.animationFrame = requestAnimationFrame(this.run.bind(this));\r\n    }\r\n\r\n    /**\r\n     * get an array of active gamepads\r\n     * @return {array}\r\n     */\r\n    getGamepads() {\r\n      return Array.from(navigator.getGamepads()).filter((pad) => pad !== null);\r\n    }\r\n\r\n    /**\r\n     * helper function to test if a binding is valid\r\n     * @param {object} binding binding to test which includes arg & value\r\n     * @return {boolean}\r\n     */\r\n    isValidBinding(binding) {\r\n      return typeof binding.arg !== 'undefined' && (typeof binding.value === 'function' || (typeof binding.value === 'undefined' && typeof binding.expression === 'undefined'));\r\n    }\r\n  };\r\n}\r\n","import GamepadFactory from './gamepad';\r\nimport { ButtonNames } from './button-mapping';\r\n\r\nexport default {\r\n  /**\r\n   * install function\r\n   * @param {Vue} Vue\r\n   * @param {object} options\r\n   */\r\n  install(Vue, options = {}) {\r\n    // we need basic gamepad api support to work\r\n    if (!('getGamepads' in navigator)) {\r\n      console.error('vue-gamepad: your browser does not support the Gamepad API!');\r\n      return;\r\n    }\r\n\r\n    const DefaultOptions = {\r\n      analogThreshold: 0.5,\r\n      buttonNames: ButtonNames,\r\n      buttonRepeatTimeout: 200,\r\n      buttonInitialTimeout: 200,\r\n      injectClasses: true,\r\n    };\r\n\r\n    const Gamepad = GamepadFactory(Vue, { ...DefaultOptions, ...options });\r\n    const gamepad = new Gamepad();\r\n\r\n    /* eslint-disable no-param-reassign */\r\n    Vue.prototype.$gamepad = gamepad;\r\n\r\n    Vue.directive('gamepad', {\r\n      bind: (el, binding, vnode) => {\r\n        if (gamepad.isValidBinding(binding)) {\r\n          const callback = typeof binding.value !== 'undefined' ? binding.value : vnode.data.on.click;\r\n          gamepad.addListener(binding.arg, binding.modifiers, callback, vnode);\r\n        } else {\r\n          console.error(`invalid binding. '${binding.arg}' was not bound.`);\r\n        }\r\n      },\r\n      unbind: (el, binding, vnode) => {\r\n        if (gamepad.isValidBinding(binding)) {\r\n          const callback = typeof binding.value !== 'undefined' ? binding.value : vnode.data.on.click;\r\n          gamepad.removeListener(binding.arg, binding.modifiers, callback);\r\n        } else {\r\n          console.error(`invalid binding. '${binding.arg}' was not unbound.`);\r\n        }\r\n      },\r\n    });\r\n\r\n    Vue.directive('gamepad-layer', {\r\n      bind: (el, binding) => gamepad.switchToLayer(binding.value),\r\n      unbind: (el, binding) => gamepad.removeLayer(binding.value),\r\n    });\r\n  },\r\n};\r\n"],"names":["set","obj","keys","value","tmp","length","shift","get","def","undefined","ButtonNames","PositiveAxisNames","NegativeAxisNames","getAxisNameFromValue","axis","getAxisNames","Vue","options","holding","events","layer","layers","window","addEventListener","padConnected","bind","padDisconnected","animationFrame","requestAnimationFrame","run","document","body","classList","add","getGamepads","remove","event","modifiers","callback","vnode","action","released","repeat","push","injectClasses","elm","filter","e","forEach","pad","buttons","button","index","name","buttonNames","pressed","now","Date","initial","buttonRepeatTimeout","buttonInitialTimeout","call","axes","analogThreshold","names","Array","from","navigator","binding","arg","expression","install","console","error","DefaultOptions","Gamepad","GamepadFactory","gamepad","prototype","$gamepad","directive","el","isValidBinding","data","on","click","addListener","unbind","removeListener","switchToLayer","removeLayer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAWO,SAASA,GAAT,CAAaC,GAAb,EAAkBC,IAAlB,EAAwBC,KAAxB,EAA+B;EAEpCF,EAAAA,GAAG,CAACC,IAAI,CAAC,CAAD,CAAL,CAAH,GAAeD,GAAG,CAACC,IAAI,CAAC,CAAD,CAAL,CAAH,IAAgB,EAA/B;EACA,MAAME,GAAG,GAAGH,GAAG,CAACC,IAAI,CAAC,CAAD,CAAL,CAAf;EAEA,MAAIA,IAAI,CAACG,MAAL,GAAc,CAAlB,EAAqB;EACnBH,IAAAA,IAAI,CAACI,KAAL;EACAN,IAAAA,GAAG,CAACI,GAAD,EAAMF,IAAN,EAAYC,KAAZ,CAAH;EACD,GAHD,MAGO;EACLF,IAAAA,GAAG,CAACC,IAAI,CAAC,CAAD,CAAL,CAAH,GAAeC,KAAf;EACD;EAED,SAAOF,GAAP;EACD;EAYM,SAASM,GAAT,CAAaN,GAAb,EAAkBC,IAAlB,EAAyC;EAAA,MAAjBM,GAAiB,uEAAXC,SAAW;EAC9C,MAAML,GAAG,GAAGH,GAAG,CAACC,IAAI,CAAC,CAAD,CAAL,CAAf;EAEA,MAAIA,IAAI,CAACG,MAAL,GAAc,CAAd,IAAmBD,GAAvB,EAA4B;EAC1BF,IAAAA,IAAI,CAACI,KAAL;EACA,WAAOC,GAAG,CAACH,GAAD,EAAMF,IAAN,CAAH,IAAkBM,GAAzB;EACD;EAED,SAAOJ,GAAG,IAAII,GAAd;EACD;;EC7CM,IAAME,WAAW,GAAG,CACzB,UADyB,EACb,UADa,EACD,UADC,EACW,UADX,EAEzB,eAFyB,EAER,gBAFQ,EAEU,cAFV,EAE0B,eAF1B,EAGzB,eAHyB,EAGR,cAHQ,EAIzB,eAJyB,EAIR,gBAJQ,EAKzB,gBALyB,EAKP,kBALO,EAKa,kBALb,EAKiC,mBALjC,EAMzB,QANyB,CAApB;EASA,IAAMC,iBAAiB,GAAG,CAC/B,mBAD+B,EACV,kBADU,EAE/B,oBAF+B,EAET,mBAFS,CAA1B;EAKA,IAAMC,iBAAiB,GAAG,CAC/B,kBAD+B,EACX,gBADW,EAE/B,mBAF+B,EAEV,iBAFU,CAA1B;EAWA,SAASC,oBAAT,CAA8BC,IAA9B,EAAoCX,KAApC,EAA2C;EAChD,MAAIA,KAAK,GAAG,CAAZ,EAAe,OAAOQ,iBAAiB,CAACG,IAAD,CAAxB;EACf,SAAOF,iBAAiB,CAACE,IAAD,CAAxB;EACD;EAOM,SAASC,YAAT,CAAsBD,IAAtB,EAA4B;EACjC,SAAO,CAACH,iBAAiB,CAACG,IAAD,CAAlB,EAA0BF,iBAAiB,CAACE,IAAD,CAA3C,CAAP;EACD;;EClCc,yBAAUE,GAAV,EAA6B;EAAA,MAAdC,OAAc,uEAAJ,EAAI;EAC1C;EACE,uBAAc;EAAA;EACZ,WAAKC,OAAL,GAAe,EAAf;EACA,WAAKC,MAAL,GAAc,EAAd;EACA,WAAKC,KAAL,GAAa,CAAb;EACA,WAAKC,MAAL,GAAc,EAAd;EAEAC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,kBAAxB,EAA4C,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAA5C;EACAH,MAAAA,MAAM,CAACC,gBAAP,CAAwB,qBAAxB,EAA+C,KAAKG,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAA/C;EAEA,WAAKE,cAAL,GAAsBC,qBAAqB,CAAC,KAAKC,GAAL,CAASJ,IAAT,CAAc,IAAd,CAAD,CAA3C;EACD;EAXH;EAAA;EAAA,qCAgBiB;EACbK,QAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,mBAA5B;EACD;EAlBH;EAAA;EAAA,wCAuBoB;EAChB,YAAI,KAAKC,WAAL,GAAmB7B,MAAnB,KAA8B,CAAlC,EAAqC;EACnCyB,UAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBG,MAAxB,CAA+B,mBAA/B;EACD;EACF;EA3BH;EAAA;EAAA,kCAoCcC,KApCd,EAoCqBC,SApCrB,EAoCgCC,QApChC,EAoCwD;EAAA,YAAdC,KAAc,uEAAN,IAAM;EACpD,YAAMC,MAAM,GAAGH,SAAS,CAACI,QAAV,GAAqB,UAArB,GAAkC,SAAjD;EACA,YAAMC,MAAM,GAAG,CAAC,CAACL,SAAS,CAACK,MAA3B,CAFoD;EAMpD,YAAMvB,MAAM,GAAGZ,GAAG,CAAC,KAAKY,MAAN,EAAc,CAAC,KAAKC,KAAN,EAAaoB,MAAb,EAAqBJ,KAArB,CAAd,EAA2C,EAA3C,CAAlB;EACA,YAAIjB,MAAM,CAACd,MAAP,KAAkB,CAAtB,EAAyB;EACvBL,UAAAA,GAAG,CAAC,KAAKmB,MAAN,EAAc,CAAC,KAAKC,KAAN,EAAaoB,MAAb,EAAqBJ,KAArB,CAAd,EAA2C,EAA3C,CAAH;EACD,SATmD;EAYpD,aAAKjB,MAAL,CAAY,KAAKC,KAAjB,EAAwBoB,MAAxB,EAAgCJ,KAAhC,EAAuCO,IAAvC,CAA4C;EAAEJ,UAAAA,KAAK,EAALA,KAAF;EAASG,UAAAA,MAAM,EAANA,MAAT;EAAiBJ,UAAAA,QAAQ,EAARA;EAAjB,SAA5C,EAZoD;EAepD,YAAIrB,OAAO,CAAC2B,aAAR,IAAyBL,KAAzB,IAAkCA,KAAK,CAACM,GAA5C,EAAiD;EAC/CN,UAAAA,KAAK,CAACM,GAAN,CAAUb,SAAV,CAAoBC,GAApB,CAAwB,WAAxB,uBAAmDG,KAAnD;EACD;EACF;EAtDH;EAAA;EAAA,qCA8DiBA,KA9DjB,EA8DwBC,SA9DxB,EA8DmCC,QA9DnC,EA8D6C;EACzC,YAAME,MAAM,GAAGH,SAAS,CAACI,QAAV,GAAqB,UAArB,GAAkC,SAAjD,CADyC;EAIzC,YAAItB,MAAM,GAAGZ,GAAG,CAAC,KAAKY,MAAN,EAAc,CAAC,KAAKC,KAAN,EAAaoB,MAAb,EAAqBJ,KAArB,CAAd,EAA2C,EAA3C,CAAhB;EACA,YAAIjB,MAAM,CAACd,MAAP,GAAgB,CAApB,EAAuB;EAErBc,UAAAA,MAAM,GAAGA,MAAM,CAAC2B,MAAP,CAAc,UAACC,CAAD;EAAA,mBAAOA,CAAC,CAACT,QAAF,KAAeA,QAAtB;EAAA,WAAd,CAAT,CAFqB;EAMrB,cAAInB,MAAM,CAACd,MAAP,GAAgB,CAApB,EAAuB;EACrBL,YAAAA,GAAG,CAAC,KAAKmB,MAAN,EAAc,CAAC,KAAKC,KAAN,EAAaoB,MAAb,EAAqBJ,KAArB,CAAd,EAA2CjB,MAA3C,CAAH;EACD,WAFD,MAEO;EACL,mBAAO,KAAKA,MAAL,CAAY,KAAKC,KAAjB,EAAwBoB,MAAxB,EAAgCJ,KAAhC,CAAP;EACD;EACF;EACF;EA/EH;EAAA;EAAA,oCAqFgBhB,KArFhB,EAqFuB;EACnB,YAAI,KAAKA,KAAL,KAAeA,KAAnB,EAA0B;EAExB,eAAKC,MAAL,CAAYD,KAAZ,IAAqB,KAAKA,KAA1B;EACA,eAAKA,KAAL,GAAaA,KAAb;EACD;EACF;EA3FH;EAAA;EAAA,kCAiGcA,KAjGd,EAiGqB;EAEjB,aAAKA,KAAL,GAAa,KAAKC,MAAL,CAAYD,KAAZ,CAAb;EACA,eAAO,KAAKC,MAAL,CAAYD,KAAZ,CAAP,CAHiB;EAMjB,eAAO,KAAKD,MAAL,CAAYC,KAAZ,CAAP;EACD;EAxGH;EAAA;EAAA,4BA6GQ;EAAA;EACJ,aAAKc,WAAL,GAAmBc,OAAnB,CAA2B,UAACC,GAAD,EAAS;EAElCA,UAAAA,GAAG,CAACC,OAAJ,CAAYF,OAAZ,CAAoB,UAACG,MAAD,EAASC,KAAT,EAAmB;EACrC,gBAAMC,IAAI,GAAGpC,OAAO,CAACqC,WAAR,CAAoBF,KAApB,CAAb,CADqC;EAIrC,gBAAID,MAAM,CAACI,OAAX,EAAoB;EAClB,kBAAMpC,MAAM,GAAGZ,GAAG,CAAC,KAAI,CAACY,MAAN,EAAc,CAAC,KAAI,CAACC,KAAN,EAAa,SAAb,EAAwBiC,IAAxB,CAAd,EAA6C,EAA7C,CAAlB;EAEA,kBAAIlC,MAAM,CAACd,MAAP,GAAgB,CAApB,EAAuB;EACrB,oBAAM+B,KAAK,GAAGjB,MAAM,CAACA,MAAM,CAACd,MAAP,GAAgB,CAAjB,CAApB;EACA,oBAAMmD,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;EACA,oBAAME,OAAO,GAAG,OAAO,KAAI,CAACxC,OAAL,CAAamC,IAAb,CAAP,KAA8B,WAA9C,CAHqB;EAMrB,oBAAIK,OAAO,IACHtB,KAAK,CAACM,MAAN,IACIc,GAAG,GAAG,KAAI,CAACtC,OAAL,CAAamC,IAAb,CAAP,IAA8BpC,OAAO,CAAC0C,mBAFjD,EAEuE;EACrE,kBAAA,KAAI,CAACzC,OAAL,CAAamC,IAAb,IAAqBG,GAArB;EACA,sBAAIE,OAAJ,EAAa;EACX,oBAAA,KAAI,CAACxC,OAAL,CAAamC,IAAb,KAAuBpC,OAAO,CAAC2C,oBAAR,GACE3C,OAAO,CAAC0C,mBADjC;EAED;EACDvB,kBAAAA,KAAK,CAACE,QAAN,CAAeuB,IAAf;EACD;EACF,eAnBiB;EAqBnB,aArBD,MAqBO,IAAI,CAACV,MAAM,CAACI,OAAR,IAAmB,OAAO,KAAI,CAACrC,OAAL,CAAamC,IAAb,CAAP,KAA8B,WAArD,EAAkE;EACvE,qBAAO,KAAI,CAACnC,OAAL,CAAamC,IAAb,CAAP;EAEA,kBAAMlC,OAAM,GAAGZ,GAAG,CAAC,KAAI,CAACY,MAAN,EAAc,CAAC,KAAI,CAACC,KAAN,EAAa,UAAb,EAAyBiC,IAAzB,CAAd,EAA8C,EAA9C,CAAlB;EACA,kBAAIlC,OAAM,CAACd,MAAP,GAAgB,CAApB,EAAuB;EACrB,oBAAM+B,MAAK,GAAGjB,OAAM,CAACA,OAAM,CAACd,MAAP,GAAgB,CAAjB,CAApB;EACA+B,gBAAAA,MAAK,CAACE,QAAN,CAAeuB,IAAf;EACD;EACF;EACF,WAlCD,EAFkC;EAuClCZ,UAAAA,GAAG,CAACa,IAAJ,CAASd,OAAT,CAAiB,UAAC7C,KAAD,EAAQiD,KAAR,EAAkB;EACjC,gBAAIjD,KAAK,IAAIc,OAAO,CAAC8C,eAAjB,IAAoC5D,KAAK,IAAI,CAAEc,OAAO,CAAC8C,eAA3D,EAA6E;EAC3E,kBAAMV,IAAI,GAAGxC,oBAAoB,CAACuC,KAAD,EAAQjD,KAAR,CAAjC;EACA,kBAAMgB,MAAM,GAAGZ,GAAG,CAAC,KAAI,CAACY,MAAN,EAAc,CAAC,KAAI,CAACC,KAAN,EAAa,SAAb,EAAwBiC,IAAxB,CAAd,EAA6C,EAA7C,CAAlB;EAEA,kBAAIlC,MAAM,CAACd,MAAP,GAAgB,CAApB,EAAuB;EACrB,oBAAM+B,KAAK,GAAGjB,MAAM,CAACA,MAAM,CAACd,MAAP,GAAgB,CAAjB,CAApB;EACA,oBAAMmD,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;EACA,oBAAME,OAAO,GAAG,OAAO,KAAI,CAACxC,OAAL,CAAamC,IAAb,CAAP,KAA8B,WAA9C,CAHqB;EAMrB,oBAAIK,OAAO,IACHtB,KAAK,CAACM,MAAN,IACIc,GAAG,GAAG,KAAI,CAACtC,OAAL,CAAamC,IAAb,CAAP,IAA8BpC,OAAO,CAAC0C,mBAFjD,EAEuE;EACrE,kBAAA,KAAI,CAACzC,OAAL,CAAamC,IAAb,IAAqBG,GAArB;EACA,sBAAIE,OAAJ,EAAa;EACX,oBAAA,KAAI,CAACxC,OAAL,CAAamC,IAAb,KAAuBpC,OAAO,CAAC2C,oBAAR,GACE3C,OAAO,CAAC0C,mBADjC;EAED;EACDvB,kBAAAA,KAAK,CAACE,QAAN,CAAeuB,IAAf;EACD;EACF;EACF,aArBD,MAqBO;EACL,kBAAMG,KAAK,GAAGjD,YAAY,CAACqC,KAAD,CAA1B,CADK;EAILY,cAAAA,KAAK,CAAClB,MAAN,CAAa,UAACO,IAAD;EAAA,uBAAU,KAAI,CAACnC,OAAL,CAAamC,IAAb,CAAV;EAAA,eAAb,EACGL,OADH,CACW,UAACK,IAAD,EAAU;EACjB,uBAAO,KAAI,CAACnC,OAAL,CAAamC,IAAb,CAAP;EAEA,oBAAMlC,MAAM,GAAGZ,GAAG,CAAC,KAAI,CAACY,MAAN,EAAc,CAAC,KAAI,CAACC,KAAN,EAAa,UAAb,EAAyBiC,IAAzB,CAAd,EAA8C,EAA9C,CAAlB;EACA,oBAAIlC,MAAM,CAACd,MAAP,GAAgB,CAApB,EAAuB;EACrB,sBAAM+B,OAAK,GAAGjB,MAAM,CAACA,MAAM,CAACd,MAAP,GAAgB,CAAjB,CAApB;EACA+B,kBAAAA,OAAK,CAACE,QAAN,CAAeuB,IAAf;EACD;EACF,eATH;EAUD;EACF,WArCD;EAsCD,SA7ED;EA+EA,aAAKlC,cAAL,GAAsBC,qBAAqB,CAAC,KAAKC,GAAL,CAASJ,IAAT,CAAc,IAAd,CAAD,CAA3C;EACD;EA9LH;EAAA;EAAA,oCAoMgB;EACZ,eAAOwC,KAAK,CAACC,IAAN,CAAWC,SAAS,CAACjC,WAAV,EAAX,EAAoCY,MAApC,CAA2C,UAACG,GAAD;EAAA,iBAASA,GAAG,KAAK,IAAjB;EAAA,SAA3C,CAAP;EACD;EAtMH;EAAA;EAAA,qCA6MiBmB,OA7MjB,EA6M0B;EACtB,eAAO,OAAOA,OAAO,CAACC,GAAf,KAAuB,WAAvB,KAAuC,OAAOD,OAAO,CAACjE,KAAf,KAAyB,UAAzB,IAAwC,OAAOiE,OAAO,CAACjE,KAAf,KAAyB,WAAzB,IAAwC,OAAOiE,OAAO,CAACE,UAAf,KAA8B,WAArJ,CAAP;EACD;EA/MH;EAAA;EAAA;EAiND;;AClND,cAAe;EAMbC,EAAAA,OANa,mBAMLvD,GANK,EAMc;EAAA,QAAdC,OAAc,uEAAJ,EAAI;EAEzB,QAAI,EAAE,iBAAiBkD,SAAnB,CAAJ,EAAmC;EACjCK,MAAAA,OAAO,CAACC,KAAR,CAAc,6DAAd;EACA;EACD;EAED,QAAMC,cAAc,GAAG;EACrBX,MAAAA,eAAe,EAAE,GADI;EAErBT,MAAAA,WAAW,EAAE5C,WAFQ;EAGrBiD,MAAAA,mBAAmB,EAAE,GAHA;EAIrBC,MAAAA,oBAAoB,EAAE,GAJD;EAKrBhB,MAAAA,aAAa,EAAE;EALM,KAAvB;EAQA,QAAM+B,OAAO,GAAGC,cAAc,CAAC5D,GAAD,qBAAW0D,cAAX,MAA8BzD,OAA9B,EAA9B;EACA,QAAM4D,OAAO,GAAG,IAAIF,OAAJ,EAAhB;EAGA3D,IAAAA,GAAG,CAAC8D,SAAJ,CAAcC,QAAd,GAAyBF,OAAzB;EAEA7D,IAAAA,GAAG,CAACgE,SAAJ,CAAc,SAAd,EAAyB;EACvBvD,MAAAA,IAAI,EAAE,cAACwD,EAAD,EAAKb,OAAL,EAAc7B,KAAd,EAAwB;EAC5B,YAAIsC,OAAO,CAACK,cAAR,CAAuBd,OAAvB,CAAJ,EAAqC;EACnC,cAAM9B,QAAQ,GAAG,OAAO8B,OAAO,CAACjE,KAAf,KAAyB,WAAzB,GAAuCiE,OAAO,CAACjE,KAA/C,GAAuDoC,KAAK,CAAC4C,IAAN,CAAWC,EAAX,CAAcC,KAAtF;EACAR,UAAAA,OAAO,CAACS,WAAR,CAAoBlB,OAAO,CAACC,GAA5B,EAAiCD,OAAO,CAAC/B,SAAzC,EAAoDC,QAApD,EAA8DC,KAA9D;EACD,SAHD,MAGO;EACLiC,UAAAA,OAAO,CAACC,KAAR,6BAAmCL,OAAO,CAACC,GAA3C;EACD;EACF,OARsB;EASvBkB,MAAAA,MAAM,EAAE,gBAACN,EAAD,EAAKb,OAAL,EAAc7B,KAAd,EAAwB;EAC9B,YAAIsC,OAAO,CAACK,cAAR,CAAuBd,OAAvB,CAAJ,EAAqC;EACnC,cAAM9B,QAAQ,GAAG,OAAO8B,OAAO,CAACjE,KAAf,KAAyB,WAAzB,GAAuCiE,OAAO,CAACjE,KAA/C,GAAuDoC,KAAK,CAAC4C,IAAN,CAAWC,EAAX,CAAcC,KAAtF;EACAR,UAAAA,OAAO,CAACW,cAAR,CAAuBpB,OAAO,CAACC,GAA/B,EAAoCD,OAAO,CAAC/B,SAA5C,EAAuDC,QAAvD;EACD,SAHD,MAGO;EACLkC,UAAAA,OAAO,CAACC,KAAR,6BAAmCL,OAAO,CAACC,GAA3C;EACD;EACF;EAhBsB,KAAzB;EAmBArD,IAAAA,GAAG,CAACgE,SAAJ,CAAc,eAAd,EAA+B;EAC7BvD,MAAAA,IAAI,EAAE,cAACwD,EAAD,EAAKb,OAAL;EAAA,eAAiBS,OAAO,CAACY,aAAR,CAAsBrB,OAAO,CAACjE,KAA9B,CAAjB;EAAA,OADuB;EAE7BoF,MAAAA,MAAM,EAAE,gBAACN,EAAD,EAAKb,OAAL;EAAA,eAAiBS,OAAO,CAACa,WAAR,CAAoBtB,OAAO,CAACjE,KAA5B,CAAjB;EAAA;EAFqB,KAA/B;EAID;EAlDY,CAAf;;;;;;;;"}