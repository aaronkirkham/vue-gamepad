{"version":3,"file":"vue-gamepad.js","sources":["../lib/utils.js","../lib/button-mapping.js","../lib/gamepad.js","../lib/index.js"],"sourcesContent":["/**\n * helper function to build all nested properties similar to lodash's _.set function\n * \n * set(object, ['x', 'y', 'z'], 'default')\n * console.log(object.x.y.z);\n *  => default\n * \n * @param {object} obj object to build properties for\n * @param {array} keys list of keys to nest\n * @param {any} value value to set\n */\nexport function set(obj, keys, value) {\n  obj[keys[0]] = obj[keys[0]] || {};\n  const tmp = obj[keys[0]];\n\n  if (keys.length > 1) {\n    keys.shift();\n    set(tmp, keys, value);\n  }\n  else {\n    obj[keys[0]] = value;\n  }\n\n  return obj;\n}\n\n/**\n * helper function to get value from a nest object similar to lodash's _.get function\n * \n * get({ x: { y: 0 } }, ['x', 'y', 'z'], [])\n * => []\n * \n * @param {object} obj object to get properties from\n * @param {array} keys list of keys to use\n * @param {any} [def=undefined] default value if nothing was found\n */\nexport function get(obj, keys, def = undefined) {\n  const tmp = obj[keys[0]];\n\n  if (keys.length > 1 && tmp) {\n    keys.shift();\n    return get(tmp, keys) || def;\n  }\n\n  return tmp || def;\n}","export const ButtonNames = [\n  'button-a', 'button-b', 'button-x', 'button-y',\n  'shoulder-left', 'shoulder-right', 'trigger-left', 'trigger-right',\n  'button-select', 'button-start',\n  'left-stick-in', 'right-stick-in',\n  'button-dpad-up', 'button-dpad-down', 'button-dpad-left', 'button-dpad-right',\n  'vendor'\n];\n\nexport const PositiveAxisNames = [\n  'left-analog-right', 'left-analog-down',\n  'right-analog-right', 'right-analog-down'\n];\n\nexport const NegativeAxisNames = [\n  'left-analog-left', 'left-analog-up',\n  'right-analog-left', 'right-analog-up'\n];\n\n/**\n * get name of axis from input value\n * @param {number} axis axis id\n * @param {number} value current input value\n * @return {string} string representing the axis name\n */\nexport function getAxisNameFromValue(axis, value) {\n  if (value > 0) return PositiveAxisNames[axis];\n  else if (value < 0) return NegativeAxisNames[axis];\n\n  return undefined;\n}\n\n/**\n * get the name of both position and negative names from an axis\n * @param {number} axis axis is\n * @return {array} array containing both position and negative axis names\n */\nexport function getAxisNames(axis) {\n  return [PositiveAxisNames[axis], NegativeAxisNames[axis]];\n}","import { set, get } from './utils';\nimport { getAxisNameFromValue, getAxisNames } from './button-mapping';\n\nexport default function (Vue, options = {}) {\n  return class Gamepad {\n    constructor() {\n      this.holding = {};\n      this.events = {};\n      this.layer = 0;\n      this.layers = {};\n\n      window.addEventListener('gamepadconnected', this.padConnected.bind(this));\n      window.addEventListener('gamepaddisconnected', this.padDisconnected.bind(this));\n\n      this.animationFrame = requestAnimationFrame(this.run.bind(this));\n    }\n\n    /**\n     * gamepad was connected\n     * @param {GamepadEvent} event \n     */\n    padConnected(event) {\n      document.body.classList.add('gamepad-connected');\n    }\n\n    /**\n     * gamepad was disconnected\n     * @param {GamepadEvent} event \n     */\n    padDisconnected(event) {\n      if (this.getGamepads().length === 0) {\n        document.body.classList.remove('gamepad-connected');\n      }\n    }\n\n    /**\n     * add an event handler\n     * @param {string} event name of the button event\n     * @param {object} modifiers vue binding modifiers\n     * @param {function} callback function to trigger\n     * @param {object} vnode vue directive vnode\n     */\n    addListener(event, modifiers, callback, vnode = null) {\n      const action = modifiers.released ? 'released' : 'pressed';\n      const repeat = !!modifiers.repeat;\n\n      this.debug(`listening for '${event}' '${action}' (repeat? ${repeat}) on layer ${this.layer}...`);\n\n      // if we don't already have an array initialised for the current event\n      // do it now\n      const events = get(this.events, [this.layer, action, event], []);\n      if (events.length === 0) {\n        set(this.events, [this.layer, action, event], []);\n      }\n\n      // register the event\n      this.events[this.layer][action][event].push({ vnode, repeat, callback });\n\n      // inject classes\n      if (options.injectClasses && vnode && vnode.elm) {\n        vnode.elm.classList.add('v-gamepad', `v-gamepad--${event}`);\n      }\n    }\n\n    /**\n     * remove an event handler\n     * @param {string} event name of the button event\n     * @param {object} modifiers vue binding modifiers\n     * @param {function} callback trigger function\n     */\n    removeListener(event, modifiers, callback) {\n      const action = modifiers.released ? 'released' : 'pressed';\n      this.debug(`removing listener for '${event}' '${action}' on layer ${this.layer}...`);\n\n      // get a list of all events for the current action\n      let events = get(this.events, [this.layer, action, event], []);\n      if (events.length > 0) {\n        // filter any events which have same callback\n        events = events.filter(event => event.callback !== callback);\n\n        // if we have any remaining events after the filter, update the array\n        // otherwise delete the object\n        if (events.length > 0) {\n          set(this.events, [this.layer, action, event], events);\n        }\n        else {\n          delete this.events[this.layer][action][event];\n        }\n      }\n    }\n\n    /**\n     * switch to a new layer\n     * @param {number} layer layer number to switch to\n     */\n    switchToLayer(layer) {\n      if (this.layer != layer) {\n        // keep track of the old layer before we switch\n        this.layers[layer] = this.layer;\n        this.layer = layer;\n\n        this.debug(`switched to layer ${this.layer}.`);\n      }\n    }\n\n    /**\n     * remove a layer, delete the registered events and switch back to the old layer\n     * @param {number} layer layer number to remove\n     */\n    removeLayer(layer) {\n      // switch back to the previous layer\n      this.layer = this.layers[layer];\n      delete this.layers[layer];\n\n      // delete the layer events\n      delete this.events[layer];\n\n      this.debug(`switched back to layer ${this.layer}.`);\n    }\n\n    /**\n     * main loop\n     */\n    run() {\n      this.getGamepads().forEach(pad => {\n        // check gamepad buttons\n        pad.buttons.forEach((button, index) => {\n          const name = options.buttonNames[index];\n\n          // button is pressed\n          if (button.pressed) {\n            const now = Date.now();\n            const events = get(this.events, [this.layer, 'pressed', name], []);\n\n            if (events.length > 0) {\n              const event = events[events.length - 1];\n\n              // button was just pressed, or is repeating\n              if (typeof this.holding[name] === 'undefined' || (event.repeat && (now - this.holding[name]) >= options.buttonRepeatTimeout)) {\n                this.holding[name] = now;\n                event.callback.call();\n              }\n            }\n          }\n          // button was released\n          else if (!button.pressed && typeof this.holding[name] !== 'undefined') {\n            delete this.holding[name];\n\n            const events = get(this.events, [this.layer, 'released', name], []);\n            if (events.length > 0) {\n              const event = events[events.length - 1];\n              event.callback.call();\n            }\n          }\n        });\n\n        // check gamepad axis\n        pad.axes.forEach((value, index) => {\n          if (value >= options.analogThreshold || value <= -(options.analogThreshold)) {\n            const name = getAxisNameFromValue(index, value);\n            const events = get(this.events, [this.layer, 'pressed', name], []);\n\n            if (events.length > 0) {\n              const event = events[events.length - 1];\n              const now = Date.now();\n\n              // axis was just moved, or is repeating\n              if (typeof this.holding[name] === 'undefined' || (event.repeat && (now - this.holding[name]) >= options.buttonRepeatTimeout)) {\n                this.holding[name] = now;\n                event.callback.call();\n              }\n            }\n          }\n          else {\n            const names = getAxisNames(index);\n\n            // trigger the release event if this axis was pressed\n            names.filter(name => this.holding[name])\n              .forEach(name => {\n                delete this.holding[name];\n\n                const events = get(this.events, [this.layer, 'released', name], []);\n                if (events.length > 0) {\n                  const event = events[events.length - 1];\n                  event.callback.call();\n                }\n              });\n          }\n        });\n      });\n\n      this.animationFrame = requestAnimationFrame(this.run.bind(this));\n    }\n\n    /**\n     * get an array of active gamepads\n     * @return {array}\n     */\n    getGamepads() {\n      return Array.from(navigator.getGamepads()).filter(pad => pad !== null);\n    }\n\n    /**\n     * helper function to test if a binding is valid\n     * @param {object} binding binding to test which includes arg & value\n     * @return {boolean}\n     */\n    isValidBinding(binding) {\n      return typeof binding.arg !== 'undefined' &&\n            (typeof binding.value === 'function' || (typeof binding.value === 'undefined' && typeof binding.expression === 'undefined'));\n    }\n\n    debug(...args) {\n      if (!options.silent) {\n        console.log('%cvue-gamepad', 'background:#fc0;color:#000', ...args);\n      }\n    }\n\n    error(...args) {\n      console.error('%cvue-gamepad', 'background:#fc0;color:#000', ...args);\n    }\n  }\n}","import GamepadFactory from './gamepad';\nimport { ButtonNames } from './button-mapping';\n\nexport default {\n  /**\n   * install function\n   * @param {Vue} Vue \n   * @param {object} options \n   */\n  install(Vue, options = {}) {\n    // we need basic gamepad api support to work\n    if (!('getGamepads' in navigator)) {\n      console.error(`vue-gamepad: your browser does not support the Gamepad API!`);\n      return false;\n    }\n\n    const DefaultOptions = {\n      analogThreshold: 0.5,\n      buttonNames: ButtonNames,\n      buttonRepeatTimeout: 200,\n      injectClasses: true,\n      silent: true,\n    };\n\n    const Gamepad = GamepadFactory(Vue, { ...DefaultOptions, ...options });\n    const gamepad = new Gamepad();\n\n    Vue.prototype.$gamepad = gamepad;\n\n    Vue.directive('gamepad', {\n      bind: (el, binding, vnode) => {\n        if (gamepad.isValidBinding(binding)) {\n          const callback = typeof binding.value !== 'undefined' ? binding.value : vnode.data.on.click;\n          gamepad.addListener(binding.arg, binding.modifiers, callback, vnode);\n        }\n        else {\n          gamepad.error(`invalid binding. '${binding.arg}' was not bound.`);\n        }\n      },\n      unbind: (el, binding, vnode) => {\n        if (gamepad.isValidBinding(binding)) {\n          const callback = typeof binding.value !== 'undefined' ? binding.value : vnode.data.on.click;\n          gamepad.removeListener(binding.arg, binding.modifiers, callback);\n        }\n        else {\n          gamepad.error(`invalid binding. '${binding.arg}' was not unbound.`);\n        }\n      },\n    });\n\n    Vue.directive('gamepad-layer', {\n      bind: (el, binding, vnode) => gamepad.switchToLayer(binding.value),\n      unbind: (el, binding) => gamepad.removeLayer(binding.value),\n    });\n  }\n}"],"names":["set","obj","keys","value","tmp","length","shift","get","def","undefined","ButtonNames","PositiveAxisNames","NegativeAxisNames","getAxisNameFromValue","axis","getAxisNames","Vue","options","holding","events","layer","layers","window","addEventListener","padConnected","bind","padDisconnected","animationFrame","requestAnimationFrame","run","event","document","body","classList","add","getGamepads","remove","modifiers","callback","vnode","action","released","repeat","debug","push","injectClasses","elm","filter","forEach","pad","buttons","button","index","name","buttonNames","pressed","now","Date","buttonRepeatTimeout","call","axes","analogThreshold","names","Array","from","navigator","binding","arg","expression","silent","args","console","log","error","install","DefaultOptions","Gamepad","GamepadFactory","gamepad","prototype","$gamepad","directive","el","isValidBinding","data","on","click","addListener","unbind","removeListener","switchToLayer","removeLayer"],"mappings":"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"}