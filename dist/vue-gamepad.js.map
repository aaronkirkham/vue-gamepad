{"version":3,"file":"index.js","sources":["lib/gamepad.js","lib/index.js"],"sourcesContent":["export const BUTTON_NAMES = [\n  'button-a', 'button-b', 'button-x', 'button-y',\n  'shoulder-left', 'shoulder-right', 'trigger-left', 'trigger-right',\n  'button-select', 'button-start',\n  'left-stick-in', 'right-stick-in',\n  'button-dpad-up', 'button-dpad-down', 'button-dpad-left', 'button-dpad-right',\n  'vendor'\n];\n\nexport class Gamepad {\n  constructor(Vue, options) {\n    this.pressed = new Set();\n    this.events = {};\n    this.layer = 0;\n    this.layers = {};\n\n    window.addEventListener('gamepadconnected', this.padConnected.bind(this));\n    window.addEventListener('gamepaddisconnected', this.padDisconnected.bind(this));\n\n    this.animationFrame = requestAnimationFrame(this.run.bind(this));\n  }\n\n  /**\n   * gamepad was connected\n   * @param {GamepadEvent} event \n   */\n  padConnected(event) {\n    document.body.classList.add('gamepad-connected');\n  }\n\n  /**\n   * gamepad was disconnected\n   * @param {GamepadEvent} event \n   */\n  padDisconnected(event) {\n    if (this.getGamepads().length === 0) {\n      document.body.classList.remove('gamepad-connected');\n    }\n  }\n\n  /**\n   * add an event handler\n   * @param {string} action type of action on the button (pressed, released)\n   * @param {string} event name of the button event\n   * @param {function} callback function to trigger\n   * @param {object} vnode vue directive vnode\n   */\n  addListener(action, event, callback, vnode = null) {\n    console.log(`listening for '${event}' on layer ${this.layer}...`);\n\n    // TODO: handle action\n\n    // setup the current layer if needed\n    if (typeof this.events[this.layer] === 'undefined') {\n      this.events[this.layer] = {};\n      BUTTON_NAMES.forEach(b => this.events[this.layer][b] = []);\n    }\n\n    // register the event\n    this.events[this.layer][event].push({ vnode, callback });\n    console.log(this.events[this.layer][event]);\n  }\n\n  /**\n   * remove an event handler\n   * @param {string} event name of the button event\n   * @param {function} callback trigger function\n   */\n  removeListener(event, callback) {\n    console.log(`removing listener for '${event}' on layer ${this.layer}...`);\n\n    const events = this.events[this.layer];\n    events[event] = events[event].filter(e => e.callback !== callback);\n  }\n\n  /**\n   * switch to a new layer\n   * @param {*} layer \n   */\n  switchToLayer(layer) {\n    if (this.layer != layer) {\n      // keep track of the old layer before we switch\n      this.layers[layer] = this.layer;\n      this.layer = layer;\n\n      console.log(`switched to layer ${this.layer}.`);\n    }\n  }\n\n  /**\n   * remove a layer, delete the registered events and switch back to the old layer\n   * @param {*} layer \n   */\n  removeLayer(layer) {\n    // switch back to the previous layer\n    this.layer = this.layers[layer];\n    delete this.layers[layer];\n\n    // delete the layer events\n    delete this.events[layer];\n\n    console.log(`switched back to layer ${this.layer}.`);\n  }\n\n  /**\n   * main loop\n   */\n  run() {\n    this.getGamepads().forEach(pad => {\n      // check gamepad buttons\n      pad.buttons.forEach((button, index) => {\n        const name = BUTTON_NAMES[index];\n        const events = this.events[this.layer][name];\n\n        // button is pressed\n        if (button.pressed && !this.pressed.has(name)) {\n          this.pressed.add(name);\n\n          if (events.length > 0) {\n          }\n        }\n        // button was released\n        else if (!button.pressed && this.pressed.has(name)) {\n          this.pressed.delete(name);\n\n          if (events.length > 0) {\n            const event = events[events.length - 1];\n            event.callback.call();\n          }\n        }\n      });\n    });\n\n    this.animationFrame = requestAnimationFrame(this.run.bind(this));\n  }\n\n  /**\n   * get an array of active gamepads\n   * @return {array}\n   */\n  getGamepads() {\n    return Array.from(navigator.getGamepads()).filter(pad => pad !== null);\n  }\n}","import { Gamepad, BUTTON_NAMES } from './gamepad';\n\nconst isValidBinding = binding => {\n  return binding.arg\n    && BUTTON_NAMES.includes(binding.arg)\n    && (typeof binding.value === 'function' || (typeof binding.value === 'undefined' && typeof binding.expression === 'undefined'));\n}\n\nexport default {\n  /**\n   * install function\n   * @param {Vue} Vue \n   * @param {object} options \n   */\n  install(Vue, options = {}) {\n    const gamepad = new Gamepad(Vue, options);\n    console.log(gamepad);\n\n    // options.buttonMapping\n    // options.injectClasses\n    // options.silent\n\n    Vue.prototype.$gamepad = gamepad;\n\n    Vue.directive('gamepad', {\n      bind: (el, binding, vnode) => {\n        if (isValidBinding(binding)) {\n          const action = binding.modifiers.pressed ? 'pressed' : 'released';\n          const event = binding.arg;\n          let callback = typeof binding.value !== 'undefined' ? binding.value : vnode.data.on.click;\n\n          gamepad.addListener(action, event, callback, vnode);\n        }\n        else {\n          console.error(`vue-gamepad: invalid binding. '${binding.arg}' was not bound.`);\n        }\n      },\n      unbind: (el, binding, vnode) => {\n        if (isValidBinding(binding)) {\n          const callback = typeof binding.value !== 'undefined' ? binding.value : vnode.data.on.click;\n          gamepad.removeListener(binding.arg, callback);\n        }\n        else {\n          console.error(`vue-gamepad: invalid binding. '${binding.arg}' was not unbound.`);\n        }\n      },\n    });\n\n    // Vue.directive('gamepad-data', {\n    //   bind: (el, binding, vnode) => {\n    //     console.log(`v-gamepad-data bind`);\n    //   },\n    //   unbind: (el, binding) => {\n    //     console.log(`v-gamepad-data unbind`);\n    //   },\n    // });\n\n    Vue.directive('gamepad-layer', {\n      bind: (el, binding, vnode) => {\n        gamepad.switchToLayer(binding.value);\n      },\n      unbind: (el, binding) => {\n        gamepad.removeLayer(binding.value);\n      },\n    });\n  }\n}"],"names":["BUTTON_NAMES","Gamepad","Vue","options","pressed","Set","events","layer","layers","window","addEventListener","padConnected","bind","padDisconnected","animationFrame","requestAnimationFrame","run","event","document","body","classList","add","getGamepads","length","remove","action","callback","vnode","console","log","forEach","b","push","filter","e","pad","buttons","button","index","name","has","delete","call","Array","from","navigator","isValidBinding","binding","arg","includes","value","expression","install","gamepad","prototype","$gamepad","directive","el","modifiers","data","on","click","addListener","error","unbind","removeListener","switchToLayer","removeLayer"],"mappings":"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"}