!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.VueGamepad=t()}(this,function(){"use strict";function a(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function n(e){var o=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};return function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.pressed=new Set,this.events={},this.layer=0,this.layers={},window.addEventListener("gamepadconnected",this.padConnected.bind(this)),window.addEventListener("gamepaddisconnected",this.padDisconnected.bind(this)),this.animationFrame=requestAnimationFrame(this.run.bind(this))}var t,n,i;return t=e,(n=[{key:"padConnected",value:function(e){document.body.classList.add("gamepad-connected")}},{key:"padDisconnected",value:function(e){0===this.getGamepads().length&&document.body.classList.remove("gamepad-connected")}},{key:"addListener",value:function(e,t,n){var i=this,a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;console.log("listening for '".concat(t,"' on layer ").concat(this.layer,"...")),void 0===this.events[this.layer]&&(this.events[this.layer]={},o.buttonNames.forEach(function(e){return i.events[i.layer][e]=[]})),this.events[this.layer][t].push({vnode:a,callback:n}),console.log(this.events[this.layer][t])}},{key:"removeListener",value:function(e,t){console.log("removing listener for '".concat(e,"' on layer ").concat(this.layer,"..."));var n=this.events[this.layer];n[e]=n[e].filter(function(e){return e.callback!==t})}},{key:"switchToLayer",value:function(e){this.layer!=e&&(this.layers[e]=this.layer,this.layer=e,console.log("switched to layer ".concat(this.layer,".")))}},{key:"removeLayer",value:function(e){this.layer=this.layers[e],delete this.layers[e],delete this.events[e],console.log("switched back to layer ".concat(this.layer,"."))}},{key:"run",value:function(){var a=this;this.getGamepads().forEach(function(e){e.buttons.forEach(function(e,t){var n=o.buttonNames[t],i=a.events[a.layer][n];if(e.pressed&&!a.pressed.has(n))a.pressed.add(n),i.length;else if(!e.pressed&&a.pressed.has(n)){if(a.pressed.delete(n),0<i.length)i[i.length-1].callback.call()}})}),this.animationFrame=requestAnimationFrame(this.run.bind(this))}},{key:"getGamepads",value:function(){return Array.from(navigator.getGamepads()).filter(function(e){return null!==e})}},{key:"isValidBinding",value:function(e){return void 0!==e.arg&&o.buttonNames.includes(e.arg)&&("function"==typeof e.value||void 0===e.value&&void 0===e.expression)}}])&&a(t.prototype,n),i&&a(t,i),e}()}var i=["button-a","button-b","button-x","button-y","shoulder-left","shoulder-right","trigger-left","trigger-right","button-select","button-start","left-stick-in","right-stick-in","button-dpad-up","button-dpad-down","button-dpad-left","button-dpad-right","vendor"];return{install:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},r=new(n(e,function(a){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{},t=Object.keys(o);"function"==typeof Object.getOwnPropertySymbols&&(t=t.concat(Object.getOwnPropertySymbols(o).filter(function(e){return Object.getOwnPropertyDescriptor(o,e).enumerable}))),t.forEach(function(e){var t,n,i;t=a,i=o[n=e],n in t?Object.defineProperty(t,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[n]=i})}return a}({},{buttonNames:i,injectClasses:!0,silent:!0},t)));e.prototype.$gamepad=r,e.directive("gamepad",{bind:function(e,t,n){if(r.isValidBinding(t)){var i=t.modifiers.pressed?"pressed":"released",a=t.arg,o=void 0!==t.value?t.value:n.data.on.click;r.addListener(i,a,o,n)}else console.error("vue-gamepad: invalid binding. '".concat(t.arg,"' was not bound."))},unbind:function(e,t,n){if(r.isValidBinding(t)){var i=void 0!==t.value?t.value:n.data.on.click;r.removeListener(t.arg,i)}else console.error("vue-gamepad: invalid binding. '".concat(t.arg,"' was not unbound."))}}),e.directive("gamepad-layer",{bind:function(e,t,n){r.switchToLayer(t.value)},unbind:function(e,t){r.removeLayer(t.value)}})}}});
//# sourceMappingURL=vue-gamepad.min.js.map